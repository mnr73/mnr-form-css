@use 'extends';
@import "../../color";

// body {
// 	// @media (pointer: none) {
// 	// 	background-color: red;
// 	// }
// 	@media (pointer: coarse) {
// 		background-color: blue;
// 	}
// 	@media (pointer: fine) {
// 		background-color: green;
// 	}
// }

.mnrf-checkbox {
	@extend %box;
	-webkit-tap-highlight-color: rgba(255,255,255,0);
	&,& *:not(svg)>*>*,& *::after,& *::before{
		@extend %transition;
	}
	.sub-box {
		@extend %sub-box;
		@extend %normol-sub-box-md;
		border-radius: 2px;
		// z-index: 1;
		.sub-check{
			height: 100%;
			display: block;
		}
	}
	input {
		@extend %display-none;
		&:enabled + .sub-box {
			&::after {
				content: "";
				display: block;
				position: absolute;
				top: 50%;
				left: 50%;
				transform: translate(-50%, -50%);
				// opacity: 20%;
				width: 0%;
				height: 0%;
				z-index: 1;
				border-radius: 1000px;
			}
		}
		@media (pointer: fine){
			&:hover:enabled + .sub-box {
				&::after {
					width: 220%;
					height: 220%;
				}
			}
		}
		&:checked + .sub-box {
			// transition: all .3s;
			&::after {
				animation: checkanimate .4s;
			}
		}
		&:disabled {
			& ~ * {
				@extend %no-drap;
			}
		}
	}
	&.opt-sm {
		.sub-box {
			@extend %normol-sub-box-sm;
		}
	}
	&.opt-md {
		.sub-box {
			@extend %normol-sub-box-md;
		}
	}
	&.opt-lg {
		.sub-box {
			@extend %normol-sub-box-lg;
		}
	}
	&.opt-em {
		.sub-box {
			@extend %normol-sub-box-em;
		}
	}
	&.opt-block {
		@extend %opt-block;
	}
}

.mnrf-radio {
	@extend %box;
	-webkit-tap-highlight-color: rgba(255,255,255,0);
	&,& *:not(svg)>*>*,& *::after,& *::before{
		@extend %transition;
	}
	.sub-box {
		@extend %sub-box;
		@extend %round-corner;
		@extend %normol-sub-box-md;
		// @extend %transition;
		padding: 3px;
		&::before {
			@extend %insider;
			width: 100%;
			height: 100%;
		}
	}
	input {
		@extend %display-none;
		&:enabled + .sub-box {
			&::after {
				// transition: all .3s;
				content: "";
				display: block;
				position: absolute;
				top: 50%;
				left: 50%;
				transform: translate(-50%, -50%);
				// opacity: 20%;
				width: 0%;
				height: 0%;
				z-index: 1;
				border-radius: 1000px;
			}
		}
		@media (pointer: fine){
			&:hover:enabled + .sub-box {
				// transition: all .3s;
				&::after {
					width: 220%;
					height: 220%;
				}
			}
		}
		&:checked + .sub-box {
			// transition: all .3s;
			&::after {
				animation: checkanimate .4s;
			}
		}
		&:disabled {
			& ~ * {
				@extend %no-drap;
			}
		}
	}

	&.opt-sm {
		.sub-box {
			@extend %normol-sub-box-sm;
		}
	}
	&.opt-md {
		.sub-box {
			@extend %normol-sub-box-md;
		}
	}
	&.opt-lg {
		.sub-box {
			@extend %normol-sub-box-lg;
		}
	}
	&.opt-em {
		.sub-box {
			@extend %normol-sub-box-em;
		}
	}
	&.opt-block {
		@extend %opt-block;
	}
}

@keyframes checkanimate {
	from {
		opacity: 1;
		width: 0;
		height: 0;
	}
	to {
		opacity: .7;
		width: 220%;
		height: 220%;
	}
}

$colors: (
	"main": "lightBlue",
	"red": "red",
	"yellow": "yellow",
	"green": "emerald",
);

@each $name, $color in ($colors) {
	$className: ".mnrf-checkbox.color-#{$name}";
	@if $name == "main" {
		$className: ".mnrf-checkbox";
	}
	#{$className} {
		.sub-box {
			@extend %tw-border-#{$color}-400;
			.sub-check {
				@extend %tw-fill-#{$color}-100;
			}
		}
		input {
			@media (pointer: fine){
				&:hover:enabled + .sub-box {
					// @extend %tw-border-#{$color}-500;
					border-color: map-get(map-get($tw_colors, #{$color}), 500);
					.sub-check {
						// @extend %tw-fill-#{$color}-300;
						fill: map-get(map-get($tw_colors, #{$color}), 300);
					}
				}
			}
			&:enabled + .sub-box {
				&::after {
					// @extend %tw-bg-#{$color}-500;
					background-color: rgba(
						$color: map-get(map-get($tw_colors, #{$color}), 500),
						$alpha: 0.2
					);
				}
			}
			&:checked:enabled + .sub-box {
				@extend %tw-border-#{$color}-600;
				@extend %tw-bg-#{$color}-300;
				.sub-check {
					@extend %tw-fill-#{$color}-600;
				}
			}
			&:disabled {
				& + .sub-box {
					@extend %tw-border-#{$color}-200;
					.sub-check {
						@extend %tw-fill-#{$color}-100;
					}
				}
				&:checked + .sub-box {
					@extend %tw-bg-#{$color}-100;
					// @extend %tw-border-#{$color}-200;
					.sub-check {
						@extend %tw-fill-#{$color}-400;
					}
				}
			}
		}
	}

	$className: ".mnrf-radio.color-#{$name}";
	@if $name == "main" {
		$className: ".mnrf-radio";
	}
	#{$className} {
		.sub-box {
			@extend %tw-border-#{$color}-400;
			&::before {
				@extend %tw-bg-#{$color}-100;
			}
		}
		input {
			@media (pointer: fine){
				&:hover:enabled + .sub-box {
					// @extend %tw-border-#{$color}-500;
					border-color: map-get(map-get($tw_colors, #{$color}), 500);
					&::before {
						// @extend %tw-bg-#{$color}-300;
						background-color: map-get(map-get($tw_colors, #{$color}), 300);
					}
				}
			}
			&:enabled + .sub-box {
				&::after {
					// @extend %tw-bg-#{$color}-500;
					background-color: rgba(
						$color: map-get(map-get($tw_colors, #{$color}), 500),
						$alpha: 0.2
					);
				}
			}
			&:checked:enabled + .sub-box {
				@extend %tw-border-#{$color}-600;
				@extend %tw-bg-#{$color}-300;
				&::before {
					@extend %tw-bg-#{$color}-600;
				}
			}
			&:disabled {
				& + .sub-box {
					@extend %tw-border-#{$color}-200;
					&::before {
						@extend %tw-bg-#{$color}-100;
					}
				}
				&:checked + .sub-box {
					@extend %tw-bg-#{$color}-100;
					&::before {
						@extend %tw-bg-#{$color}-400;
					}
				}
			}
		}
	}
}
