// @use 'extends';
// @import "../../color";

.mnrf-checkbox {
	@extend %chek_and_radio_main_body;
	.sub-box {
		@extend %check_and_radio_box;
		width: 20px;
		height: 20px;
		border-radius: 2px;
		border-color: map-get(map-get($tw_colors, #{$main-color}), 400);
		color: map-get(map-get($tw_colors, #{$main-color}), 100);
		.sub-check {
			height: 100%;
			display: block;
			fill: currentColor;
			// color: inherit;
		}
		&::before {
			@extend %check_and_radio_before;
		}
	}
	input {
		@extend %chek_and_radio_input_hide;
		& + .sub-box {
			&::before {
				background-color: rgba(map-get(map-get($tw_colors, #{$main-color}), 500), 0.5);
			}
		}
		&:focus + .sub-box {
			&::before {
				width: 220%;
				height: 220%;
			}
		}
		@media (pointer: fine) {
			&:hover:enabled {
				& + .sub-box{
					&::before {
						width: 220%;
						height: 220%;
					}
				}
			}
		}
		&:checked + .sub-box {
			background-color: map-get(map-get($tw_colors, #{$main-color}), 300) !important;
			color: map-get(map-get($tw_colors, #{$main-color}), 600) !important;
			border-color: currentColor;
			&::before {
				animation: checkanimate 0.4s;
			}
		}
		&:disabled {
			& ~ *,
			& ~ * * {
				cursor: no-drop;
				opacity: 0.5;
			}
		}
	}
	&.opt-sm {
		.sub-box {
			width: 18px;
			height: 18px;
		}
	}
	&.opt-md {
		.sub-box {
			width: 20px;
			height: 20px;
		}
	}
	&.opt-lg {
		.sub-box {
			width: 22px;
			height: 22px;
		}
	}
	&.opt-em {
		.sub-box {
			width: 1.46em;
			height: 1.46em;
		}
	}
	&.opt-block {
		display: block;
	}
}

.mnrf-radio {
	@extend .mnrf-checkbox;
	.sub-box {
		border-radius: 1000px;
		padding: 3px;
		.sub-check {
			border-radius: 1000px;
			width: 100%;
			background-color: currentColor;
		}
	}
	input {
		&:hover:enabled:checked + .sub-box {
			&::before {
				width: 0;
				height: 0;
			}
		}
	}
}

@keyframes checkanimate {
	from {
		opacity: 1;
		width: 0;
		height: 0;
	}
	to {
		opacity: 0.7;
		width: 220%;
		height: 220%;
		z-index: 1;
	}
}

@each $name, $color in ($colors) {
	$className: ".mnrf-checkbox.color-#{$name}";
	#{$className} {
		.sub-box {
			border-color: map-get(map-get($tw_colors, #{$color}), 400);
			color: map-get(map-get($tw_colors, #{$color}), 100);
		}
		input {
			& + .sub-box {
				&::before {
					background-color: rgba(map-get(map-get($tw_colors, #{$color}), 500), 0.5);
				}
			}
			&:checked {
				& + .sub-box {
					// border-color: map-get(map-get($tw_colors, #{$color}), 600) !important;
					background-color: map-get(map-get($tw_colors, #{$color}), 300) !important;
					color: map-get(map-get($tw_colors, #{$color}), 600) !important;
				}
			}
		}
	}
}
